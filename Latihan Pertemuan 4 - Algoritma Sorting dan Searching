Swap

#swap function
var1 = 1
var2 = 2
var1,var2 = var2,var1
print(var1,var2)

===========================================================================================================================
Latihan Swap

#swap function
var1 = 1
var2 = 2
var3 = 3
var1,var2,var3 = var3,var2,var1
print(var1,var2,var3)
===========================================================================================================================
Bubble Sort

list = [25,21,22,24,23,27,26]

lastElementIndex = len(list)-1
print(0,list)
for idx in range(lastElementIndex):
    if list[idx]>list[idx+1]:
        list[idx],list[idx+1] = list[idx+1],list[idx]
    print(idx+1, list)

result:
0 [5, 12, 3, 19, 1, 47]
1 [5, 12, 3, 19, 1, 47]
2 [5, 3, 12, 19, 1, 47]
3 [5, 3, 12, 19, 1, 47]
4 [5, 3, 12, 1, 19, 47]
5 [5, 3, 12, 1, 19, 47]
---------------------------------------------------------------------------------------------------------------------------
def bubbleSort(list):
    lastElementIndex = len(list)-1
    for passNo in range(lastElementIndex,0,-1):
        for idx in range(passNo):
            if list[idx]>list[idx+1]:
                list[idx],list[idx+1] = list[idx+1],list[idx]
    return list

list = [25,21,22,24,23,27,26]
print(bubbleSort(list))
print(list)


result:
[21, 22, 23, 24, 25, 26, 27]
[21, 22, 23, 24, 25, 26, 27]
===========================================================================================================================
Latihan Bubble Sort

list = [100,20,60,90,40,30,10]

lastElementIndex = len(list)-1
print(0, list)
for index in range(lastElementIndex):
    if list[index] > list[index + 1]:
        list[index], list[index + 1] = list[index + 1] ,list[index]
    print(index + 1, list)

result:
0 [100, 20, 60, 90, 40, 30, 10]
1 [20, 100, 60, 90, 40, 30, 10]
2 [20, 60, 100, 90, 40, 30, 10]
3 [20, 60, 90, 100, 40, 30, 10]
4 [20, 60, 90, 40, 100, 30, 10]
5 [20, 60, 90, 40, 30, 100, 10]
6 [20, 60, 90, 40, 30, 10, 100]
---------------------------------------------------------------------------------------------------------------------------
def bubbleSort(list):
    lastElementIndex = len(list)-1
    for passNo in range(lastElementIndex,0,-1):
        for index in range(lastElementIndex):
            if list[index] > list[index + 1]:
               list[index], list[index + 1] = list[index + 1], list[index]
    return list

list = [100,20,60,90,40,30,10]
print(bubbleSort(list))
print(list)

result:
[10, 20, 30, 40, 60, 90, 100]
[10, 20, 30, 40, 60, 90, 100]
===========================================================================================================================
Insertion Sort

def insertionSort(list):
    for i in range(1, len(list)):
        j = i-1
        next = list[i]

        while (list[j] > next) and (j >= 0):
            list[j+1] = list[j]
            j=j-1
        list[j+1] = next
    return list

list = [35,31,32,34,33,37,36]
print(list)
print(insertionSort(list))
print("============================")
list = [25,26,22,24,27,23,21]
print(list)
print(insertionSort(list))

result:
[35, 31, 32, 34, 33, 37, 36]
[31, 32, 33, 34, 35, 36, 37]
============================
[25, 26, 22, 24, 27, 23, 21]
[21, 22, 23, 24, 25, 26, 27]
===========================================================================================================================
Latihan Insertion Sort

def insertionSort(list):
    for i in range(1, len(list)):
        j = i-1
        next = list[i]

        while (list[j] > next) and (j >= 0):
            list[j+1] = list[j]
            j=j-1
        list[j+1] = next
    return list

list = [89,12,57,16,25,11,75]
print(list)
print(insertionSort(list))

result:
[89, 12, 57, 16, 25, 11, 75]
[11, 12, 16, 25, 57, 75, 89]
===========================================================================================================================
Selection Sort

def selectionSort(list):
    for fill_slot in range(len(list) -1, 0, -1):
        max_index = 0
        for location in range(1, fill_slot + 1):
            if list[location] > list[max_index]:
                max_index = location
        list[fill_slot], list[max_index] = list[max_index], list[fill_slot]
    return list

list = [70,15,25,19,34,44]
print(list)
print(selectionSort(list))

result:
[70, 15, 25, 19, 34, 44]
[15, 19, 25, 34, 44, 70]
===========================================================================================================================
Latihan Selection Sort

def selectionSort(list):
    for fill_slot in range(len(list) - 1, 0, -1):
        max_index = 0
        for location in range(1, fill_slot + 1):
            if list[location] > list[max_index]:
                max_index = location
        list[fill_slot], list[max_index] = list[max_index], list[fill_slot]
    return list

list = [89,12,57,16,25]
print(list)
print(selectionSort(list))

result:
[89, 12, 57, 16, 25]
[12, 16, 25, 57, 89]
===========================================================================================================================
Linear Search

def LinearSearch(list, item):
    index = 0
    found = False

#Mencocokkan nilai dengan setiap elemen data
    while index < len(list) and found is False:
        if list[index] == item:
            found = True
        else:
            index = index + 1
    return found

list = [12,33,11,99,22,55,90]
print(LinearSearch(list, 12))
#result = True
print(LinearSearch(list, 91))
#result = False
===========================================================================================================================
Latihan Linear Search

def LinearSearch(list, item):
    index = 0
    found = False

#Mencocokkan nilai dengan setiap elemen data
    while index < len(list) and found is False:
        if list[index] == item:
            found = True
        else:
            index = index + 1
    return found

list = ["y","u","i","w","o","a","q","u","j","p"]
print(LinearSearch(list, "a"))
#result = True
===========================================================================================================================
Binary Search
Prasyarat dari algoritma binary search adalah data yang diurutkan.
Algoritma secara iteratif membagi daftar menjadi dua bagian dan melacak
indeks terendah dan tertinggi hingga menemukan nilai yang dicari


def BubbleSort(list):
    lastElementIndex = len(list)-1
    for passNo in range(lastElementIndex,0,-1):
        for index in range(lastElementIndex):
            if list[index] > list[index + 1]:
               list[index], list[index + 1] = list[index + 1], list[index]
    return list

def BinarySearch(list, item):
    first = 0
    last = len(list)-1
    found = False

    while first <= last and not found:
        midpoint = (first + last)//2
        if list[midpoint] == item:
            found = True
        else:
            if item < list[midpoint]:
                last = midpoint - 1
            else:
                first = midpoint + 1
    return found

list = [12,33,11,99,22,55,90]
sorted_list = BubbleSort(list)
print(BinarySearch(list, 12))
#result = True
print(BinarySearch(list, 91))
#result = False
===========================================================================================================================
Latihan Binary Search

def BubbleSort(list):
    lastElementIndex = len(list)-1
    for passNo in range(lastElementIndex,0,-1):
        for index in range(lastElementIndex):
            if list[index] > list[index + 1]:
               list[index], list[index + 1] = list[index + 1], list[index]
    return list

def BinarySearch(list, item):
    first = 0
    last = len(list)-1
    found = False

    while first <= last and not found:
        midpoint = (first + last)//2
        if list[midpoint] == item:
            found = True
        else:
            if item < list[midpoint]:
                last = midpoint - 1
            else:
                first = midpoint + 1
    return found

list = ["y","u","i","w","o","a","q","u","j","p"]
sorted_list = BubbleSort(list)
print(BinarySearch(list, "a"))
#result = True
print(BinarySearch(list, "x"))
#result = False
===========================================================================================================================
Interpolation Search

def BubbleSort(list):
    lastElementIndex = len(list)-1
    for passNo in range(lastElementIndex,0,-1):
        for index in range(lastElementIndex):
            if list[index] > list[index + 1]:
               list[index], list[index + 1] = list[index + 1], list[index]
    return list

def IntPolSearch(list, x):
    idx0 = 0
    idxn = (len(list)-1)
    found = False

    while idx0 <= idxn and x >= list[idx0] and x <= list[idxn]:
        #mencari titik tengah
        mid = idx0 + int(((float(idxn - idx0)/(list[idxn] - list[idx0])) * (x - list[idx0])))
        #membandingkan nilai di titik tengah dengan search value
        if list[mid] == x:
            found = True
            return found

        if list[mid] < x:
            idx0 = mid + 1
    return found

list = [12,33,11,99,22,55,90]
sorted_list = BubbleSort(list)
print(IntPolSearch(list, 12))
#result = True
print(IntPolSearch(list, 91))
#result = False
===========================================================================================================================
Latihan Interpolation Search

def BubbleSort(list):
    lastElementIndex = len(list)-1
    for passNo in range(lastElementIndex,0,-1):
        for index in range(lastElementIndex):
            if list[index] > list[index + 1]:
               list[index], list[index + 1] = list[index + 1], list[index]
    return list

def IntPolSearch(list, x):
    idx0 = 0
    idxn = (len(list)-1)
    found = False

    while idx0 <= idxn and x >= list[idx0] and x <= list[idxn]:
        #mencari titik tengah
        idx0_val = ord(list[idx0])
        idxn_val = ord(list[idxn])
        x_val = ord(x)

        mid = idx0 + ((x_val - idx0_val) * (idxn - idx0)) // (idxn_val - idx0_val)
        #membandingkan nilai di titik tengah dengan search value
        if list[mid] == x:
            found = True
            return found

        if list[mid] < x:
            idx0 = mid + 1
        else:
            idxn = mid - 1
    return found

list = ["y","u","i","w","o","a","q","u","j","p"]
sorted_list = BubbleSort(list)
print(IntPolSearch(list, "u"))
#result = True
print(IntPolSearch(list, "s"))
#result = False
















