1.  Buatlah list dengan nama “Mahasiswa” yang berisi nama, NIM, prodi, mata kuliah, tanggal hari ini, nama universitas
    
    import datetime
    tanggal_hari_ini = datetime.date.today()
    Mahasiswa = ["Dika Arnanda Putra", 2022071014, "Informatika", "Desain dan Analisis Algoritma", tanggal_hari_ini.strftime('%d-%m-%Y'), "Universitas Pembangunan Jaya"]
    print(Mahasiswa)

2.  Menampilkan suatu unsur sesuai dengan posisi index
    bin_colors = ['Red', 'Green', 'Blue', 'Yellow']
    print(bin_colors[1])

    out = Green

    jika kita memasukkan urutan index berupa string, maka terjadi kesalahan.

3. Cetak NIM dengan memanggil urutan index dalam list Mahasiswa

    import datetime
    tanggal_hari_ini = datetime.date.today()
    Mahasiswa = ["Dika Arnanda Putra", 2022071014, "Informatika", "Desain dan Analisis Algoritma", tanggal_hari_ini.strftime('%d-%m-%Y'), "Universitas Pembangunan Jaya"]
    print(Mahasiswa[1])

4.  Cetak nama universitas dengan memanggil urutan index dalam list Mahasiswa

    import datetime
    tanggal_hari_ini = datetime.date.today()
    Mahasiswa = ["Dika Arnanda Putra", 2022071014, "Informatika", "Desain dan Analisis Algoritma", tanggal_hari_ini.strftime('%d-%m-%Y'), "Universitas Pembangunan Jaya"]
    print(Mahasiswa[5])

5.  Mengambil subset dari elemen list dengan menentukan rentang indeks disebut slicing.

    #tanda ":" berfungsi untuk membatasi berapa index yang akan ditampilkan
    #contoh [0:2], angka 0 berfungsi menampilkan isi index pada list, angka 2 berfungsi menentukan rentang sebanyak 2 isi saja dihitung dari poisi index pertama
    bin_colors = ['Red', 'Green', 'Blue', 'Yellow']
    print(bin_colors[0:2])
    #result = ['Red', 'Green']
    
    print(bin_colors[1:2])
    #result = ['Green']
    
    print(bin_colors[1:4])
    #result = ['Green', 'Blue', 'Yellow']
    -----------------------------------------------------------------------------
    import datetime
    tanggal_hari_ini = datetime.date.today()
    Mahasiswa = ["Dika Arnanda Putra", 2022071014, "Informatika", "Desain dan Analisis Algoritma", tanggal_hari_ini.strftime('%d-%m-%Y'), "Universitas Pembangunan Jaya"]
    print(Mahasiswa[0:3])
    #result = ['Dika Arnanda Putra', 2022071014, 'Informatika']
    print(Mahasiswa[1:3])
    #result = [2022071014, 'Informatika']
    print(Mahasiswa[2:4])
    #result = ['Informatika', 'Desain dan Analisis Algoritma']

6.  Cetak NIM dan prodi menggunakan slicing

    import datetime
    tanggal_hari_ini = datetime.date.today()
    Mahasiswa = ["Dika Arnanda Putra", 2022071014, "Informatika", "Desain dan Analisis Algoritma", tanggal_hari_ini.strftime('%d-%m-%Y'), "Universitas Pembangunan Jaya"]
    print(Mahasiswa[1:3])
    #result = ['2022071014', 'Informatika']

7.  Iterasi: Python memungkinkan iterasi (pengulangan) pada setiap elemen dalam daftar dengan menggunakan for loop.

    bin_colors = ['Red', 'Green', 'Blue', 'Yellow']
    for aColor in bin_colors:
        print(aColor+" Square")
    #result = Red Square
              Green Square
              Blue Square
              Yellow Square

    -----------------------------------------------------------------------------
    import datetime
    tanggal_hari_ini = datetime.date.today()
    Mahasiswa = ["Dika Arnanda Putra", "2022071014", "Informatika", "Desain dan Analisis Algoritma", tanggal_hari_ini.strftime('%d-%m-%Y'), "Universitas Pembangunan Jaya"]
    for aMahasiswa in Mahasiswa:
        print(aMahasiswa+" Square")

8.  Cetak isi list “Mahasiswa”, tambahkan kata “UPJ” di depan!

    import datetime
    tanggal_hari_ini = datetime.date.today()
    Mahasiswa = ["Dika Arnanda Putra", "2022071014", "Informatika", "Desain dan Analisis Algoritma", tanggal_hari_ini.strftime('%d-%m-%Y'), "Universitas Pembangunan Jaya"]
    for aMahasiswa in Mahasiswa:
        print("UPJ "+aMahasiswa)

9.  Struktur data dalam python: Tuples
    Tuple adalah struktur data yang tidak dapat diubah (read-only). Tuple terdiri dari beberapa elemen yang dikelilingi oleh ().

    bin_colors = ('Red', 'Green', 'Blue', 'Yellow')
    print(bin_colors[1:])
    #result = ('Green', 'Blue', 'Yellow')
    print(bin_colors[2:])
    #result = ('Blue', 'Yellow')

10. Susun Tuple bernama “UPJ”,  isi dengan Universitas, Pembangunan, Jaya

    UPJ = ('Universita', 'Pembangunan', 'Jaya')
    print(UPJ)
    #result = ('Universita', 'Pembangunan', 'Jaya')
    print(UPJ[1:])
    #result = ('Pembangunan', 'Jaya')

11. Nested Tuples

    hariAwal = ("Senin", "Selasa", "Rabu")
    hariAkhir = ("Kamis", "Jumat", "Sabtu")
    
    hari = (hariAwal, hariAkhir)
    print(hari)
    #result = (('Senin', 'Selasa', 'Rabu'), ('Kamis', 'Jumat', 'Sabtu'))
    
    
    hariAwal = ("Senin, Selasa, Rabu")
    hariAkhir = ("Kamis, Jumat, Sabtu")
    
    hari = (hariAwal, hariAkhir)
    print(hari)
    #result = ('Senin, Selasa, Rabu', 'Kamis, Jumat, Sabtu')

12. Nested tuples

    pertama = ("100")
    kedua = ("200", "400", "600")
    ketiga = ("300")
    keempat = ("400", "800")
    
    nested_tuple = pertama, kedua, ketiga, keempat
    print(nested_tuple)
    #result = ('100', ('200', '400', '600'), '300', ('400', '800'))

13. Dictionary

    bin_colors = {"manual color": "Yellow", "approved_color": "Green", "refused_color": "Red"}
    print (bin_colors)
    #result = {'manual color': 'Yellow', 'approved_color': 'Green', 'refused_color': 'Red'}
    
    #Fungsi get dapat digunakan untuk mengambil nilai yang terkait dengan key
    print(bin_colors.get('approved_color'))
    #result = Green
    
    #Untuk memperbarui nilai yang terkait dengan key
    bin_colors['approved_color'] = "Purple"
    print(bin_colors)
    #result = {'manual color': 'Yellow', 'approved_color': 'Purple', 'refused_color': 'Red'}


14. Latihan Dictionary

    latihan = {"Nama": "Dika Arnanda Putra", "NIM": "2022071014", "Prodi": "Informatika", "Universitas": "UPJ"}
    print (latihan)
    #result = {'Nama': 'Dika Arnanda Putra', 'NIM': '2022071014', 'Prodi': 'Informatika', 'Universitas': 'UPJ'}
    
    #Fungsi get dapat digunakan untuk mengambil nilai yang terkait dengan key
    print(latihan.get('Nama'))
    #result = Dika Arnanda Putra
    
    #Untuk memperbarui nilai yang terkait dengan key
    latihan['Nama'] = "Gregorius"
    print(latihan)
    #result = {'Nama': 'Gregorius', 'NIM': '2022071014', 'Prodi': 'Informatika', 'Universitas': 'UPJ'}

15. Tuple acak berisi nilai boolean, dictionary dan list

    acak = (True, {'name' : 'depotkode','status': 'alive'}, [1,2,3])
    print(acak)
    #result = (True, {'name': 'depotkode', 'status': 'alive'}, [1, 2, 3])

16. Sets

    Set didefinisikan sebagai kumpulan elemen yang dapat berbeda jenis. Elemen-elemen diapit di dalam {}.

    green = {'grass', 'leaves'}
    print(green)
    #result = {'grass', 'leaves'}

    Karakteristik yang menentukan dari suatu set adalah bahwa ia hanya menyimpan nilai yang berbeda dari setiap elemen.
    Jika coba menambahkan elemen redundan lainnya, itu akan mengabaikannya

    green = {'grass', 'leaves', 'leaves'}
    print(green)
    #result = {'grass', 'leaves'}

17. Inisiasi sets dan mengubah list menjadi sets

    #Inisiasi Set
    set_01 = {4,5,6,2}
    print(set_01)
    #result = {2, 4, 5, 6}
    
    #inisiasi mengubah list menjadi set
    set_02 = set()
    set_03 = set([2,1,4,3])
    print(type(set_02))
    #result = <class 'set'>
    print(set_03)
    #result = {1, 2, 3, 4}

    Note: Sets merupakan struktur data yang tidak memiliki urutan atau index. Jadi, jika kita ingin mengambil suatu nilai
    menggunakan index, akan terjadi error.
    Karena tidak dapat memiliki index, maka untuk menghapus anggota set menggunakan dua metode yaitu discard() dan remove()

    Menambah anggota set dapat dilakukan dengan menggunakan metode add() yang digunakan untuk menambahkan hanya satu anggota pada set.
    contoh:

    set_04 = {2,3,4,5,6}
    set_04.add(1)
    print(set_04)
    #result = {1, 2, 3, 4, 5, 6}


    





